[{"C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\App.js":"1","C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\contexts\\AuthContext.js":"2","C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\Login.js":"3","C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\firebase.js":"4","C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\LoginFacebook.js":"5","C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\ForgotPassword.js":"6","C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\LoginGoogle.js":"7","C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\index.js":"8","C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\UpdateProfile.js":"9","C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\Dashboard.js":"10","C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\Signup.js":"11","C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\PrivateRoute.js":"12"},{"size":1260,"mtime":1610026018412,"results":"13","hashOfConfig":"14"},{"size":1435,"mtime":1610051057486,"results":"15","hashOfConfig":"14"},{"size":3141,"mtime":1610048742054,"results":"16","hashOfConfig":"14"},{"size":989,"mtime":1610045964280,"results":"17","hashOfConfig":"14"},{"size":2147,"mtime":1610048841719,"results":"18","hashOfConfig":"14"},{"size":1685,"mtime":1608723787267,"results":"19","hashOfConfig":"14"},{"size":2624,"mtime":1610049661706,"results":"20","hashOfConfig":"14"},{"size":245,"mtime":1608720761802,"results":"21","hashOfConfig":"14"},{"size":2572,"mtime":1608725212630,"results":"22","hashOfConfig":"14"},{"size":1263,"mtime":1610049594500,"results":"23","hashOfConfig":"14"},{"size":2076,"mtime":1608733820800,"results":"24","hashOfConfig":"14"},{"size":451,"mtime":1608722698488,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ti7g58",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\App.js",[],"C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\contexts\\AuthContext.js",[],"C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\Login.js",["57"],"import React , { useEffect, useRef, useState }  from 'react'\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport LoginFacebook from './LoginFacebook'\r\n// import firebase from \"firebase\"\r\n// import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\nimport LoginGoogle from './LoginGoogle'\r\n\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  // const [isSignedIn, setIsSignedIn] = useState(false);\r\n\r\n  // const uiConfig = {\r\n  //   signInFlow: \"popup\",\r\n  //   signInOptions: [\r\n  //     firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n  //     firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n\r\n  //   ],\r\n  //   callbacks: {\r\n  //     signInSuccess: () => false\r\n  //   }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   firebase.auth().onAuthStateChanged(user => {\r\n  //     setIsSignedIn(!!user)\r\n  //     console.log(\"user\", user)\r\n  //   })\r\n  // }, [])\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n     history.push(\"/\")\r\n    } catch {\r\n      setError(\"Failed to sig in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Card>\r\n      <Card.Body>\r\n        <h2 className=\"text-center mb-4\">Log in</h2>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Log in\r\n            </Button>\r\n        </Form>\r\n        <LoginGoogle/>\r\n        <LoginFacebook/>\r\n        {/* {isSignedIn ? (\r\n          // <span>\r\n          //   <div>Signed In!</div>\r\n          //   <button onClick={() => firebase.auth().signOut()}>Sign out!</button>\r\n          //   <h1>Welcome {firebase.auth().currentUser.displayName}</h1>\r\n          //   <img\r\n          //     alt=\"profile picture\"\r\n          //     src={firebase.auth().currentUser.photoURL}\r\n          //   />\r\n          // </span>\r\n          <h1>jesper</h1>\r\n        ) : (\r\n          <StyledFirebaseAuth\r\n            uiConfig={uiConfig}\r\n            firebaseAuth={firebase.auth()}\r\n          />\r\n        )} */}\r\n\r\n    <div className=\"w-100 text-center mt-3\">\r\n       <Link to =\"/forgot-password\">Forgot Password</Link>\r\n    </div>\r\n      </Card.Body>\r\n    </Card>\r\n    <div className=\"w-100 text-center mt-2\">\r\n      Need an account? <Link to =\"/signup\">Sign up</Link>\r\n    </div>\r\n      \r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\firebase.js",[],"C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\LoginFacebook.js",["58","59"],"import React, { useEffect, useState } from 'react'\r\n// import FacebookLogin from 'react-facebook-login'\r\nimport firebase from \"firebase/app\"\r\n\r\n// import { useHistory } from 'react-router-dom'\r\n\r\nexport default function LoginFacebook() {\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n  // const history = useHistory()\r\n  // var provider = new firebase.auth.FacebookAuthProvider();\r\n  // console.log(provider);\r\n\r\n\r\n  // const responseFacebook = (response)  => {\r\n  //   console.log(response)\r\n  //   // console.log(response.accessToken)\r\n  //   // console.log(response.name)\r\n  //   // setIsLoggedIn(true)\r\n  //   // history.push(\"/\")\r\n  // }\r\n\r\n  const handleClick = () => {\r\n    var provider = new firebase.auth.FacebookAuthProvider();    console.log(provider);\r\n      firebase\r\n        .auth()\r\n        .signInWithPopup(provider)\r\n        .then((result) => {\r\n          // /** @type {firebase.auth.OAuthCredential} */\r\n          console.log(result);\r\n          var credential = result.credential;\r\n  \r\n          // This gives you a Google Access Token. You can use it to access the Google API.\r\n          var token = credential.accessToken;\r\n          // The signed-in user info.\r\n          var user = result.user;\r\n          // ...\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n      firebase.auth().onAuthStateChanged(function (user) {\r\n        console.log(user);\r\n        if (user) {\r\n          console.log(\"User Signed in\");\r\n         // console.log(user.displayName + '\\n' + user.email);\r\n          // history.push(\"/\")\r\n          setIsLoggedIn(true)\r\n \r\n        } else {\r\n          console.log(\"No User is signed in\");\r\n        }\r\n      });\r\n    }, []);\r\n  \r\n\r\n  \r\n  return (\r\n    <div>\r\n    {isLoggedIn === false ? <button onClick={handleClick}>Login with Facebook</button> :<div> <h5>hej</h5></div>}\r\n\r\n\r\n    </div>\r\n    // <div>\r\n    //   <FacebookLogin\r\n    // appId=\"685561548827536\"\r\n    // autoLoad={true}\r\n    // fields=\"name,email,picture\"\r\n    // // onClick={componentClicked}\r\n    // callback={responseFacebook} />,  \r\n    // </div>\r\n  )\r\n}\r\n",["60","61"],"C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\ForgotPassword.js",[],["62","63"],"C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\LoginGoogle.js",["64","65","66"],"import React, { useEffect, useState } from \"react\";\r\n// import GoogleLogin from 'react-google-login';\r\n// import firebase from \"../firebase\";\r\nimport firebase from \"firebase/app\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import \"firebase/auth\"\r\n\r\n\r\n// const responseGoogle = (response) => {\r\n//   console.log(response);\r\n//   console.log(response.profileObj);\r\n// }\r\n\r\nexport default function LoginGoogle() {\r\nconst [isLoggedIn, setIsLoggedIn] = useState(false)\r\nconst [name, setName] = useState(\"\")\r\nconst [photo, setPhoto] = useState(\"\")\r\nconst history = useHistory()\r\n\r\n\r\nconst handleClick = () => {\r\n  let provider = new firebase.auth.GoogleAuthProvider();\r\n  console.log(provider);\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        // /** @type {firebase.auth.OAuthCredential} */\r\n        console.log(result);\r\n        var credential = result.credential;\r\n\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      console.log(user);\r\n      if (user) {\r\n        console.log(\"User Signed in\");\r\n        console.log(user.displayName + '\\n' + user.email);\r\n        history.push(\"/\")\r\n        setIsLoggedIn(true)\r\n        setName(user.displayName)\r\n        setPhoto(user.photoURL)\r\n      } else {\r\n        console.log(\"No User is signed in\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // const handleSignOut = () => {\r\n  //   firebase.auth().signOut().then(() => {\r\n  //     // Sign-out successful.\r\n  //   }).catch((error) => {\r\n  //     // An error happened.\r\n  //   });\r\n\r\n  //   setIsLoggedIn(false)\r\n\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {/* användes utan history push. Här kommer en logga ut knapp när man är inloggad om inte så en logga in knapp. fixa detta så det matchar med att logga in och spar bild och namn osv till dashboard */}\r\n      {isLoggedIn === false ? <button onClick={handleClick}>Login with Google</button> :<div> <h5>{name}</h5> <img src={photo} alt=\"\"/></div>}\r\n      {/* <button onClick={handleSignOut}>sign out</button> */}\r\n\r\n      {/* <GoogleLogin\r\n    clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n    buttonText=\"Login\"\r\n    onSuccess={responseGoogle}\r\n    onFailure={responseGoogle}\r\n    cookiePolicy={'single_host_origin'}\r\n  /> */}\r\n    </div>\r\n  );\r\n}\r\n",["67","68"],"C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\index.js",[],"C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\UpdateProfile.js",["69"],"import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const { currentUser, updatePassword, updateEmail } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n   function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if(emailRef.current.value !== currentUser.email){\r\n      promises.push(emailRef.current.value)\r\n    }\r\n\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n       Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\")\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                defaultValue={currentUser.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required placeholder=\"Leave blank to keep the same\" />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required placeholder=\"Leave blank to keep the same\" />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n         <Link to=\"/\">Cancel</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\Dashboard.js",[],"C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\Signup.js",[],"C:\\Users\\angie\\OneDrive\\Skrivbord\\EXjobb\\Auth\\authentication-app\\src\\components\\PrivateRoute.js",[],{"ruleId":"70","severity":1,"message":"71","line":1,"column":18,"nodeType":"72","messageId":"73","endLine":1,"endColumn":27},{"ruleId":"70","severity":1,"message":"74","line":34,"column":15,"nodeType":"72","messageId":"73","endLine":34,"endColumn":20},{"ruleId":"70","severity":1,"message":"75","line":36,"column":15,"nodeType":"72","messageId":"73","endLine":36,"endColumn":19},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"78","replacedBy":"81"},{"ruleId":"70","severity":1,"message":"74","line":34,"column":13,"nodeType":"72","messageId":"73","endLine":34,"endColumn":18},{"ruleId":"70","severity":1,"message":"75","line":36,"column":13,"nodeType":"72","messageId":"73","endLine":36,"endColumn":17},{"ruleId":"82","severity":1,"message":"83","line":57,"column":6,"nodeType":"84","endLine":57,"endColumn":8,"suggestions":"85"},{"ruleId":"76","replacedBy":"86"},{"ruleId":"78","replacedBy":"87"},{"ruleId":"70","severity":1,"message":"88","line":10,"column":40,"nodeType":"72","messageId":"73","endLine":10,"endColumn":51},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'user' is assigned a value but never used.","no-native-reassign",["89"],"no-negated-in-lhs",["90"],["89"],["90"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["91"],["89"],["90"],"'updateEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [history]",{"range":"94","text":"95"},[1662,1664],"[history]"]